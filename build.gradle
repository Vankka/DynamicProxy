plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

group 'dev.vankka'
version '1.0.0-SNAPSHOT'

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.jetbrains:annotations:23.0.0'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.24.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testCompileOnly 'org.jetbrains:annotations:23.0.0'
    testAnnotationProcessor rootProject
}


task runtimeJar(type: Jar) {
    from(files(sourceSets.main.output)) {
        exclude 'com/github/javaparser/**'
        exclude 'dev/vankka/dynamicproxy/processor/**'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    archiveClassifier = 'runtime'
}

jar {
    finalizedBy runtimeJar
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'dynamicproxy'
            from components.java
            artifact runtimeJar
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri('https://s01.oss.sonatype.org/service/local/'))
            snapshotRepositoryUrl.set(uri('https://s01.oss.sonatype.org/content/repositories/snapshots/'))
        }
    }
}

if (System.getenv('SIGNING_KEY') != null || project.hasProperty("signing.keyId")) {
    signing {
        sign publishing.publications.maven

        def key = System.getenv('SIGNING_KEY')
        if (key != null) {
            useInMemoryPgpKeys(key, System.getenv('SIGNING_KEY_PASS'))
        }
    }
}
